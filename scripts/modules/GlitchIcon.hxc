import funkin.play.PlayState;
import funkin.modding.module.Module;
import flixel.addons.display.FlxRuntimeShader;
import flixel.FlxG;

class IconGlitch extends Module
{
    var opponentIcon:Array = [];
    var playerIcon:Array = [];
    var glitchShader:FlxRuntimeShader;
    var game:PlayState;
    var songStarted:Bool = false;

    function new(){
        super('IconGlitch');
    }

    function addIcon(name, isOpponent){
        if (isOpponent) opponentIcon.push(name); else playerIcon.push(name);
    }

    function deleteIcon(name, isOpponent){
        if (isOpponent) opponentIcon.remove(name); else playerIcon.remove(name);
    }

    function onCountdownStart(event){
        super.onCountdownStart(event);
        game = PlayState.instance;

        if (game == null) return;

        glitchShader = new FlxRuntimeShader(Assets.getText(Paths.frag('distort')));
        glitchShader.setFloat('binaryIntensity', 1000);
        glitchShader.setFloat('negativity', 0);

        playerIcon.push(game.iconP1);
        opponentIcon.push(game.iconP2);
    }

    function onStepHit(){
        super.onStepHit();

        if (glitchShader != null) glitchShader.setFloat('binaryIntensity', FlxG.random.float(4,6));

        game = PlayState.instance;
        if (game == null) return;

        if (game.health > 1.6) 
            for (icon in opponentIcon) icon.shader = glitchShader;
        else
            for (icon in opponentIcon) icon.shader = null;

        if (game.health < 0.4) 
            for (icon in playerIcon) icon.shader = glitchShader;
        else
            for (icon in playerIcon) icon.shader = null;
    }
}