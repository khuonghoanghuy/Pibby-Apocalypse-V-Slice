import funkin.play.stage.Stage;
import funkin.play.PlayState;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import funkin.Conductor;
import flixel.math.FlxMath;
import funkin.modding.base.ScriptedFlxRuntimeShader;
import flixel.addons.display.FlxRuntimeShader;
import funkin.modding.module.ModuleHandler;
import flixel.util.FlxColor;
import flixel.FlxSprite;

class SchoolGumball extends Stage {
    function new() {
        super('schoolGumball');
    }

    var game:PlayState;
    var speed:Float = 1.5;

    override function buildStage(event) {
        super.buildStage(event);

        setDropsVisible(false);

        getNamedProp('sinkdrop').shader = createCyclesdShader();
        getNamedProp('topdrop').shader = createCyclesdShader();
        getNamedProp('leakdrop').shader = createCyclesdShader();
        getNamedProp('chaindrop').shader = createCyclesdShader();
        getNamedProp('doordrop').shader = createCyclesdShader();

        getNamedProp('chn1').visible = false;
        getNamedProp('chn2').visible = false;
        getNamedProp('chn3').visible = false;
    }

    var blackScreen:FlxSprite;

    override function onCreate(event){
        super.onCreate(event);

        blackScreen = new FlxSprite(0, 0);
        blackScreen.makeGraphic(1280 * 100, 720 * 100, 0x000000);
        blackScreen.screenCenter(0x11); // using XY
        blackScreen.alpha = 0.4;
        blackScreen.camera = PlayState.instance.camHUD;
        // PlayState.instance.add(blackScreen);
    }

    function createCyclesdShader() {
        var cyclesdShader = new FlxRuntimeShader(Assets.getText(Paths.frag('Cyclesd')));
        cyclesdShader.setFloat('amount', 0);
        cyclesdShader.setFloat('pixel', 5);
        return cyclesdShader;
    }

    function setDropsVisible(value:Bool) {
        getNamedProp('sinkdrop').visible = value;
        getNamedProp('topdrop').visible = value;
        getNamedProp('leakdrop').visible = value;
        getNamedProp('penny').visible = value;
        getNamedProp('doordrop').visible = value;
        getNamedProp('chaindrop').visible = value;
    }

    function setVoidVisible(value:Float) {
        getNamedProp('void_background').alpha = value;
        getNamedProp('void_house').alpha = value;
        getNamedProp('void_floor').alpha = value;
        getNamedProp('void_stuff1').alpha = value;
        getNamedProp('void_stuff3').alpha = value;
        getNamedProp('void_stuff2').alpha = value;
        getNamedProp('void_stuff4').alpha = value;
    }

    function changeChannel(num:Int){
        var channelName =[
            'chn1', 'chn2', 'chn3'
        ];

        for (name in channelName){
            if (name != null) getNamedProp(name).visible = false;
        }

        getNamedProp('chn' + num).visible = true;

        // GF:87: (x: 696 | y: 432)
        // DAD:88: (x: -128.18 | y: 449.24)
    
        switch (num)
        {
            case 1:
                game.currentStage.getDad().x = -128.18;
                game.currentStage.getDad().y = 449.24 - 50;

                game.currentStage.getGirlfriend().x = 696;
                game.currentStage.getGirlfriend().y = 432 + 50;

            case 3:
                game.currentStage.getDad().x = -128.18;
                game.currentStage.getDad().y = 449.24 - 50;

                game.currentStage.getGirlfriend().x = 696;
                game.currentStage.getGirlfriend().y = 432 + 50;
                
            case 2:
                game.currentStage.getDad().x = -128.18;
                game.currentStage.getDad().y = 449.24 + 45;

                game.currentStage.getGirlfriend().x = 696;
                game.currentStage.getGirlfriend().y = 432 + 125;
        }
    }

    function hideBackground(value:Bool) {
        var propNames = [
            'wall', 'light', 'vignette', 'vignette2', 'background'
        ];

        for (name in propNames) {
            var prop = getNamedProp(name);
            if (prop != null) prop.visible = value;
        }
    }

    override function onSongStart(){
        game = PlayState.instance;
        if (game == null) return;

        game.scoreText.font = Paths.font('Gumball.ttf');
        game.scoreText.x = 250;
        game.scoreText.size = 20;
        game.scoreText.color = FlxColor.fromRGB(49, 176, 189);

        switch (game.currentChart.songName) {
            case "Child's Play":
                PlayState.instance.currentStage.getGirlfriend().visible = false;
                setVoidVisible(0.00001);
            case "My Amazing World":
                setDropsVisible(false);
                hideBackground(false);
                setVoidVisible(0.00001);
        }
    }

    override function onBeatHit(event) {
        super.onBeatHit(event);
        if (game == null) return;

        switch (game.currentChart.songName){
            case "Child's Play":
                switch (event.beat) {
                    case 0: // prevent from restart game while already showup
                        setDropsVisible(false);
                    case 96:
                        setDropsVisible(true);
                }
        }
    }

    override function onUpdate(event){
        if (game == null) return;

        getNamedProp('void_house').angle = 4 * Math.sin(Conductor.instance.songPosition / (3000/speed));
        getNamedProp('void_stuff1').angle = 2 * Math.sin(Conductor.instance.songPosition / (2500/speed));
        getNamedProp('void_stuff2').angle = 360 * Math.sin(Conductor.instance.songPosition / (30000/speed));
        getNamedProp('void_stuff3').angle = 6 * Math.sin(Conductor.instance.songPosition / (5000/speed));
        getNamedProp('void_stuff4').angle = 3 * Math.sin(Conductor.instance.songPosition / (3000/speed));

        //game.currentCameraZoom = 0.2;
        super.onUpdate(event);
    }

    override function onStepHit(event){
        super.onStepHit(event);
        if (game == null) return;

        //trace(game.currentChart.songName);
        switch (game.currentChart.songName){
            case "Child's Play":
                switch (event.step) {
                    case 1216: 
                        setDropsVisible(false);
                        hideBackground(false);
                    case 1472:
                        setDropsVisible(true);
                        hideBackground(true);
                }
            case "My Amazing World":
                switch (event.step) {
                    case 256:
                        setDropsVisible(true);
                        hideBackground(true);
                    case 512: 
                        setDropsVisible(false);
                        hideBackground(false);
                    case 1024:
                        setDropsVisible(true);
                        hideBackground(true);
                    case 1568:
                        hideBackground(false);
                        setDropsVisible(false);
                    case 1824:
                        hideBackground(true);
                        setDropsVisible(true);
                    case 2080:
                        hideBackground(false);
                        setDropsVisible(false);
                    case 2144:
                        changeChannel(1);
                    case 2176:
						changeChannel(2);
                        game.currentCameraZoom = 1.1;
                    case 2208:
                        changeChannel(3);
                        game.currentCameraZoom = 0.8;
                    case 2272:
                        changeChannel(1);
                    case 2304:
                        changeChannel(2);
                        game.currentCameraZoom = 1.1;
                    case 2336:
                        changeChannel(3);
                        game.currentCameraZoom = 0.8;
                    case 2400:
                        changeChannel(1);
                    case 2432:
                        changeChannel(2);
                    case 2464:
                        changeChannel(3);
                        game.currentCameraZoom = 0.8;
                    case 2528:
                        changeChannel(1);
                    case 2560:
                        changeChannel(2);
                        game.currentCameraZoom = 1.1;
                    case 2592:
                        changeChannel(3);
                        game.currentCameraZoom = 0.8;
                    case 2604:
                        changeChannel(1);
                    case 2624:
                        changeChannel(2);
                        game.currentCameraZoom = 1.1;
                    case 2632:
                        changeChannel(3);
                        game.currentCameraZoom = 0.8;
                    case 2640:
                        changeChannel(1);
                    case 2648:
                        changeChannel(2);
                        game.currentCameraZoom = 0.8;
                    case 2656:
                        changeChannel(3);
                    case 2688:
                        var channelName =[
                            'chn1', 'chn2', 'chn3'
                        ];

                        for (name in channelName){
                            if (name != null) getNamedProp(name).visible = false;
                        }

                        game.camHUD.flash(FlxColor.WHITE, 1, true);
                        setVoidVisible(1);

                        game.currentStage.getDad().x = -128.18;
                        game.currentStage.getDad().y = 449.24;

                        game.currentStage.getGirlfriend().x = 696;
                        game.currentStage.getGirlfriend().y = 432;

                        game.currentStage.getDad().color = 0xff969494;
                        game.currentStage.getGirlfriend().color = 0xff969494;
                        game.currentStage.getBoyfriend().color = 0xff969494;

                        getNamedProp('void_house').color = 0xff969494;
                        getNamedProp('void_stuff1').color = 0xff969494;
                        getNamedProp('void_stuff2').color = 0xff969494;
                        getNamedProp('void_stuff3').color = 0xff969494;
                        getNamedProp('void_stuff4').color = 0xff969494;
                        getNamedProp('void_floor').color = 0xff969494;
            }
        }
    }
}
