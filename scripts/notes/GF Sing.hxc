import funkin.play.notes.notekind.NoteKind;
import funkin.play.PlayState;

import funkin.modding.module.Module;

import flixel.FlxG;

import funkin.Assets;
import funkin.Paths;

class GF_Sing extends NoteKind
{
    var game:PlayState;

    public function new()
    {
        super('GF Sing');

        this.noteKind = 'GF Sing';
        this.description = 'GF Sing';
    }

    function onCreate(e:Dynamic)
    {
        super.onCreate(e);

        if (PlayState.instance == null) return;
    }

    function onDestroy(e:Dynamic)
    {
        super.onDestroy(e);
    }

    function onUpdate(e:Dynamic)
    {
        super.onUpdate(e);
    }

    function onNoteHit(e:Dynamic)
    {
        game = PlayState.instance;
        super.onNoteHit(e);

        if (PlayState.instance == null) return;
        if (e.note.noteData.kind != "GF Sing") return;

        if (!e.note.noteData.getMustHitNote()) e.cancel();

        game.currentStage.getGirlfriend().holdTimer = 0;
        
        game.currentStage.getGirlfriend().playSingAnimation(e.note.noteData.getDirection(), false);
    }

    function onNoteMiss(e:Dynamic)
    {
        game = PlayState.instance;
        super.onNoteMiss(e);

        if (PlayState.instance == null) return;
        if (e.note.noteData.kind != "GF Sing") return;

        game.currentStage.getGirlfriend().holdTimer = 0;

        game.currentStage.getGirlfriend().playSingAnimation(e.note.noteData.getDirection(), true);
    }

    function onNoteIncoming(e)
    {
        game = PlayState.instance;
        super.onNoteIncoming(e);

        if (e.note.noteData.getMustHitNote()) return;

        for (i in this.getNotes()) if (i != null) i.visible = false;

        for (i in game.opponentStrumline.holdNotes.members) if (i?.noteData?.kind != null) if (i?.noteData?.kind == 'GF Sing') i.alpha = 0;
    }
}